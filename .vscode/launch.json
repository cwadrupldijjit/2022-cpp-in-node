{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Debug Node",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "program": "${workspaceFolder}/index.js",
            "outFiles": [
                "${workspaceFolder}/**/*.js"
            ],
            "preLaunchTask": "pnpm: build:dev",
            "runtimeArgs": [
            ],
            "console": "integratedTerminal",
            "env": {
                "DEBUG": "true"
            }
        },
        // This configuration can be quite useful if you need to debug the C++ code and the node code--
        // launch the C++ debugger first and then run this to attach to the Node process
        {
            "name": "Attach debugger to Node",
            "processId": "${command:PickProcess}",
            "request": "attach",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "(LLDB/MAC) Launch c++ debug, 1...",
            "args": [
                "${workspaceFolder}/index.js"
            ],
            "preLaunchTask": "pnpm: build:dev",
            "cwd": "${workspaceFolder}",
            "program": "${input:nodeLocationPosix}",
            "env": {
                "DEBUG": "true"
            }
        },
        {
            "name": "(MSVS/WINDOWS) Launch c++ debug",
            "type": "cppvsdbg",
            "request": "launch",
            "program": "${input:nodeLocationWindows}",
            "args": [
                "${workspaceFolder}/index.js"
            ],
            "preLaunchTask": "pnpm: build:dev",
            "stopAtEntry": true,
            "cwd": "${workspaceFolder}",
            "environment": [
                {
                    "name": "DEBUG",
                    "value": "true"
                }
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "(GCC/LINUX) Launch c++-enabled debug",
            "miDebuggerPath": "/usr/bin/gdb",
            "type": "cppdbg",
            "request": "launch",
            "program": "${input:nodeLocationPosix}",
            "args": [
                "${workspaceFolder}/index.js"
            ],
            "preLaunchTask": "pnpm: build:dev",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [
                {
                    "name": "DEBUG",
                    "value": "true",
                },
            ],
            "externalConsole": false,
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description":  "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
    ],
    // These inputs are meant to make it easier to point directly to the node executable, particularly
    // necessary because of the C++ debugging moreso than the JavaScript
    "inputs": [
        {
            "id": "nodeLocationPosix",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "which node",
                "useFirstResult": true,
            },
        },
        {
            "id": "nodeLocationWindows",
            "type":"command",
            "command": "shellCommand.execute",
            "args": {
                "command": "where.exe node",
                "useFirstResult": true,
            },
        }
    ]
}
